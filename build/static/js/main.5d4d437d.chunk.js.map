{"version":3,"sources":["store/reducers/account.jsx","store/reducers/baseLayout.jsx","store/reducers/index.jsx","store/index.jsx","configs/routes.js","Router.js","App.js","serviceWorker.js","index.js","store/actionTypes/index.jsx","store/actionTypes/account.jsx","store/actionTypes/baseLayout.jsx"],"names":["initialState","token","userInfo","name","avatar","menus","collapsed","selectedKeys","openKeys","reducers","combineReducers","account","state","arguments","length","undefined","action","type","ACCOUNT_UP_TOKEN","Object","objectSpread","payload","ACCOUNT_UP_INFO","ACCOUNT_UP_MENUS","baseLayout","BASELAYOUT_UP_COLLAPSED","BASELAYOUT_UP_SELLECTEDKEYS","BASELAYOUT_UP_OPENKEYS","__webpack_require__","d","__webpack_exports__","store","persistor","persistConfig","key","storage","persistedReducer","persistReducer","createStore","persistStore","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","BaseLayout","React","lazy","Promise","all","e","then","bind","Login","Analysis","routes","path","component","layout","redirect","Exception","Router","this","props","react_default","a","createElement","react_router_dom","react","fallback","react_router","map","x","exact","from","to","render","pathname","routerMenus","forEach","menu","some","item","pid","id","push","indexOf","checkNotAllowed","PureComponent","connect","App","es","integration_react","loading","src_Router","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d4d437d.chunk.js","sourcesContent":["import {\r\n  ACCOUNT_UP_TOKEN,\r\n  ACCOUNT_UP_INFO,\r\n  ACCOUNT_UP_MENUS\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  token: \"\",\r\n  userInfo: {\r\n    name: \"\",\r\n    avatar: \"\"\r\n  },\r\n  menus: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACCOUNT_UP_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.payload\r\n      };\r\n    case ACCOUNT_UP_INFO:\r\n      return {\r\n        ...state,\r\n        userInfo: action.payload\r\n      };\r\n    case ACCOUNT_UP_MENUS:\r\n      return {\r\n        ...state,\r\n        menus: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  BASELAYOUT_UP_COLLAPSED,\r\n  BASELAYOUT_UP_SELLECTEDKEYS,\r\n  BASELAYOUT_UP_OPENKEYS\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  collapsed: false,\r\n  selectedKeys: [],\r\n  openKeys: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case BASELAYOUT_UP_COLLAPSED:\r\n      return {\r\n        ...state,\r\n        collapsed: action.payload\r\n      };\r\n    case BASELAYOUT_UP_SELLECTEDKEYS:\r\n      return {\r\n        ...state,\r\n        selectedKeys: action.payload\r\n      };\r\n    case BASELAYOUT_UP_OPENKEYS:\r\n      return {\r\n        ...state,\r\n        openKeys: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// 把一个由多个不同 reducer 函数作为 value 的 object，合并成一个最终的 reducer 函数，然后就可以对这个 reducer 调用 createStore。(重构)\r\nimport { combineReducers } from \"redux\";\r\nimport account from \"./account\";\r\nimport baseLayout from \"./baseLayout\";\r\n\r\nconst reducers = combineReducers({ account, baseLayout });\r\n\r\nexport default reducers;\r\n","// createStore接受reducer生成stote\r\nimport { createStore } from \"redux\";\r\n// redux-persist作用是将store中的数据缓存到浏览器中，减少数据请求，每当白名单中的数据发生变化，才会进行一次更新缓存的操作，并且这个数据缓存是存在localStorage中的，不是会话级别的缓存。\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\n// storage简单就可以理解成localStorage的功能封装吧，不过有时候由于版本问题，必要在后一个storage上加一个default属性，可以在console中打出来判断是否需要加\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nconst persistConfig = { key: \"root\", storage };\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nexport const store = createStore(persistedReducer);\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nconst BaseLayout = React.lazy(() =>\n  import(/* webpackChunkName: \"BaseLayout\" */ \"@/layouts/BaseLayout\")\n);\nconst Login = React.lazy(() =>\n  import(/* webpackChunkName: \"Login\" */ \"@/pages/Login\")\n);\nconst Analysis = React.lazy(() =>\n  import(/* webpackChunkName: \"Analysis\" */ \"@/pages/Analysis\")\n);\n\nconst routes = [\n  {\n    path: \"/login\",\n    component: Login\n  },\n  {\n    path: \"/dashboard/analysis\",\n    name: \"分析页\",\n    layout: BaseLayout,\n    component: Analysis\n  },\n  {\n    path: \"/dashboard/monitor\",\n    name: \"监控台\",\n    layout: BaseLayout,\n    component: Analysis\n  },\n  {\n    path: \"/dashboard/workplace\",\n    name: \"工作台\",\n    layout: BaseLayout,\n    component: Analysis\n  },\n  {\n    path: \"/\",\n    redirect: \"/dashboard/analysis\"\n  }\n];\n\nexport default routes;\n","/**\r\n * 封装路由\r\n */\r\nimport React, { Suspense, lazy, PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// 动态路由引入\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport routes from \"./configs/routes.js\";\r\n\r\n// 自定义未能访问 --》 未有权限--》 访问失败等页面\r\n\r\nconst Exception = lazy(() =>\r\n  import(/* webpackChunkName: \"Exception\" */ \"./pages/Exception\")\r\n);\r\n\r\n// 拦截器，是否登入-》 或者有权限是否登入等\r\nfunction checkNotAllowed(menus, pathname) {\r\n  let routerMenus = [];\r\n  menus.forEach(menu => {\r\n    const isRouter = !menus.some(item => item.pid === menu.id);\r\n    if (isRouter) {\r\n      routerMenus.push(menu);\r\n    }\r\n  });\r\n  const isAllowed = routerMenus.some(item => pathname.indexOf(item.path) === 0);\r\n  return !isAllowed && pathname !== \"/\" && pathname !== \"/login\";\r\n}\r\n\r\nclass Router extends PureComponent {\r\n  render() {\r\n    const { menus } = this.props;\r\n    return (\r\n      <BrowserRouter>\r\n        <Suspense fallback={null}>\r\n          <Switch>\r\n            {routes.map(x => {\r\n              if (x.redirect) {\r\n                return (\r\n                  <Redirect exact key={x.path} from={x.path} to={x.redirect} />\r\n                );\r\n              }\r\n              return (\r\n                <Route\r\n                  exact\r\n                  key={x.path}\r\n                  path={x.path}\r\n                  render={props => {\r\n                    if (x.layout)\r\n                      return (\r\n                        <x.layout>\r\n                          {\" \"}\r\n                          <x.component {...props} />{\" \"}\r\n                        </x.layout>\r\n                      );\r\n                    // 判断路由是否是可访问的菜单下的路由\r\n                    const isNotAllowed = checkNotAllowed(menus, x.path);\r\n                    return isNotAllowed ? (\r\n                      <Exception type=\"403\" />\r\n                    ) : (\r\n                      <x.component {...props} />\r\n                    );\r\n                  }}\r\n                ></Route>\r\n              );\r\n            })}\r\n            <Route render={() => <Exception />} />\r\n          </Switch>\r\n        </Suspense>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => {\r\n  const {\r\n    account: { menus }\r\n  } = state;\r\n  return { menus };\r\n})(Router);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// Provider负责传递store\nimport { Provider } from \"react-redux\";\n\n// 引入判断是否登录组件\n\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport Router from \"./Router.js\";\n\nimport \"./index.css\";\nimport { store, persistor } from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./assets/styles/resetStyle.less\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export * from \"./account\";\r\nexport * from \"./baseLayout\";\r\n","export const ACCOUNT_UP_TOKEN = \"ACCOUNT_UP_TOKEN\";\r\nexport const ACCOUNT_UP_INFO = \"ACCOUNT_UP_INFO\";\r\nexport const ACCOUNT_UP_MENUS = \"ACCOUNT_UP_MENUS\";\r\n","export const BASELAYOUT_UP_COLLAPSED = \"BASELAYOUT_UP_COLLAPSED\";\r\nexport const BASELAYOUT_UP_SELLECTEDKEYS = \"BASELAYOUT_UP_SELLECTEDKEYS\";\r\nexport const BASELAYOUT_UP_OPENKEYS = \"BASELAYOUT_UP_OPENKEYS\";\r\n"],"sourceRoot":""}